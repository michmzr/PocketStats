name: PocketStats CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    environment: master
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Build backend and analyse
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: current
          arguments: build jacocoTestReport sonar --info -Dsonar.organization=michmzr  -Dsonar.projectKey=michmzr_PocketStats  -Dsonar.host.url=https://sonarcloud.io  -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          READER_ACCESS_TOKEN: ${{ secrets.READER_ACCESS_TOKEN }}
  build:
    needs:
     - tests
    runs-on: ubuntu-latest
    environment: master
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: false
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Build backend
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: current
          arguments: build -x test
      - name: Upload backend JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: ./build/libs/app.jar
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{secrets.SSH_HOST}} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy app.jar to server
        run: |
          scp ./build/libs/app.jar pocketstats@${{secrets.SSH_HOST}}:/usr/lib/pocketstats/app.jar
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Run commands on server
        run: |
          ssh pocketstats@${{secrets.SSH_HOST}} 'sudo systemctl stop pocketstats.service'
          ssh pocketstats@${{secrets.SSH_HOST}} 'sudo systemctl daemon-reload'
          ssh pocketstats@${{secrets.SSH_HOST}} 'sudo systemctl start pocketstats.service'
          ssh pocketstats@${{secrets.SSH_HOST}} 'systemctl status pocketstats.service'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Health check
        run: |
          echo "Waiting for 30 seconds before healthcheck"
          sleep 30
          echo "Performing healthcheck..."
          wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 10 http://${{secrets.SSH_HOST}}:8080/pocketstats/actuator/health -O /dev/null
        shell: bash
